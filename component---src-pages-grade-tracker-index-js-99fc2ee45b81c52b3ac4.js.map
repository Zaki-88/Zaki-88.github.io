{"version":3,"file":"component---src-pages-grade-tracker-index-js-99fc2ee45b81c52b3ac4.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/Table.js","webpack://gatsby-starter-default/./src/pages/Grade Tracker/index.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;","import * as React from \"react\";\r\nimport { Container, Row, Col, Form, Button, Table, ControlLabel } from \"react-bootstrap\";\r\nimport './index.css';\r\nimport { useEffect, useState } from \"react\";\r\nimport csData from './cs-2019.json';\r\nimport itData from './it-2019.json';\r\n\r\nconst grades = [\r\n    { name: \"A\", value: 4 },\r\n    { name: \"A-\", value: 3.75 },\r\n    { name: \"B+\", value: 3.25 },\r\n    { name: \"B\", value: 3 },\r\n    { name: \"B-\", value: 2.75 },\r\n    { name: \"C+\", value: 2.25 },\r\n    { name: \"C\", value: 2 },\r\n    { name: \"C-\", value: 1.75 },\r\n    { name: \"D\", value: 1 },\r\n    { name: \"F\", value: 0 },\r\n    { name: \"W\", value: \"exclude\" }\r\n];\r\n\r\nconst selectableSemester = ['1/2022', '2/2022', '3/2022', '1/2023', '2/2023', '3/2023'];\r\n\r\nexport default function Gpa() {\r\n    const [selectAbleCourses, setSelectAbleCourses] = useState([]);\r\n    const [selectedSemester, setSelectedSemester] = useState('');\r\n    const [selectedCourse, setSelectedCourse] = useState('');\r\n    const [grade, setGrade] = useState('');\r\n    const [courseData, setCourseData] = useState([]);\r\n    const [selectedMajor, setSelectedMajor] = useState('');\r\n    const [gpa, setGpa] = useState(0);\r\n\r\n    const majorChange = event => {\r\n        setSelectedMajor(event.target.value);\r\n        const course = [];\r\n        const subjects = event.target.value === 'cs' ? csData.curriculum.subjects : itData.curriculum.subjects;\r\n        for (let subjectsKey of subjects) {\r\n            for (let c of subjectsKey.subjects) {\r\n                course.push(c);\r\n            }\r\n        }\r\n        setSelectAbleCourses(course);\r\n    };\r\n\r\n    const semesterChange = event => {\r\n        setSelectedSemester(event.target.value);\r\n    };\r\n\r\n    const courseChange = event => {\r\n        setSelectedCourse(event.target.value);\r\n    };\r\n\r\n    const gradeChange = event => {\r\n        setGrade(event.target.value);\r\n    };\r\n\r\n    const calculateGpa = () => {\r\n        let totalPoints = 0;\r\n        let totalUnits = courseData.length;\r\n\r\n        courseData.forEach(course => {\r\n            let gradePoint = grades.find(grade => grade.name === course.grade).point;\r\n            totalPoints += gradePoint;\r\n        });\r\n\r\n        let calculatedGpa = totalPoints / totalUnits;\r\n        setGpa(calculatedGpa);\r\n    };\r\n\r\n    const click = () => {\r\n        const cdd = courseData;\r\n        cdd.push({\r\n            semester: selectedSemester,\r\n            courseCode: selectedCourse,\r\n            course: selectAbleCourses.find(item => item.code === selectedCourse).name,\r\n            grade: grade\r\n        });\r\n        setCourseData([...cdd]);\r\n        localStorage.setItem(\"courseData\", JSON.stringify(cdd));\r\n    };\r\n\r\n    useEffect(() => {\r\n        const storedData = localStorage.getItem(\"courseData\");\r\n        if (storedData) {\r\n            setCourseData(JSON.parse(storedData));\r\n        }\r\n    }, []);\r\n    return (\r\n        <Container className=\"app-container\">\r\n            <Row className=\"header-row\">\r\n                <Col md={3}>\r\n                    <Form.Control as=\"select\" onChange={majorChange}>\r\n                        <option label=\"Major: \" value=\"\" disabled selected hidden></option>\r\n                        <option value=\"cs\">Computer Science</option>\r\n                        <option value=\"it\">Information Technology</option>\r\n                    </Form.Control>\r\n                </Col>\r\n                <Col md={3}>\r\n                    <Form.Control as=\"select\" onChange={semesterChange}>\r\n                        <option label=\"Semester: \" value=\"\" disabled selected hidden></option>\r\n                        {selectableSemester.map((item, index) => (\r\n                            <option key={index} value={item}>{item}</option>\r\n                        ))}\r\n                    </Form.Control>\r\n                </Col>\r\n                <Col md={3}>\r\n                    <Form.Control as=\"select\" onChange={courseChange}>\r\n                        <option label=\"Course: \" value=\"\" disabled selected hidden></option>\r\n                        {selectAbleCourses.map((item, index) => (\r\n                            <option key={index} value={item.code}>{item.code} - {item.name}</option>\r\n                        ))}\r\n                    </Form.Control>\r\n                </Col>\r\n                <Col md={2}>\r\n                    <Form.Control as=\"select\" onChange={gradeChange}>\r\n                        <option label=\"Grade: \" value=\"\" disabled selected hidden></option>\r\n                        {grades.map((item, index) => (\r\n                            <option key={index} value={item.value}>{item.name}</option>\r\n                        ))}\r\n                    </Form.Control>\r\n                </Col>\r\n                <Col md={1}>\r\n                    <Button onClick={click}>Add</Button>\r\n                </Col>\r\n\r\n            </Row>\r\n            <Row className=\"table-row\">\r\n                <Col>\r\n                    <Table striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Semester</th>\r\n                                <th>Course Code</th>\r\n                                <th>Course</th>\r\n                                <th>Grade</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {courseData.map((item, index) => (\r\n                                <tr key={index}>\r\n                                    <td>{item.semester}</td>\r\n                                    <td>{item.courseCode}</td>\r\n                                    <td>{item.course}</td>\r\n                                    <td>{item.grade}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center mt-3\">\r\n                <Col xs={12} sm={6}>\r\n                    <Button variant=\"primary\" onClick={calculateGpa} disabled={!courseData.length}>\r\n                        Calculate GPA\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center mt-3\">\r\n                <Col xs={12} sm={6}>\r\n                    <h3>GPA: {gpa.toFixed(2)}</h3>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\n\r\n"],"names":["bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","ref","decoratedBsPrefix","classes","table","responsiveClass","children","grades","name","value","selectableSemester","Gpa","selectAbleCourses","setSelectAbleCourses","useState","selectedSemester","setSelectedSemester","selectedCourse","setSelectedCourse","grade","setGrade","courseData","setCourseData","selectedMajor","setSelectedMajor","gpa","setGpa","useEffect","storedData","localStorage","getItem","JSON","parse","Container","Row","Col","md","Form","as","onChange","event","target","course","subjects","csData","itData","subjectsKey","c","push","label","disabled","selected","hidden","map","item","index","key","code","Button","onClick","cdd","semester","courseCode","find","setItem","stringify","xs","sm","totalPoints","totalUnits","length","forEach","gradePoint","point","toFixed"],"sourceRoot":""}